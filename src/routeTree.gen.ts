/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile/route'
import { Route as PostsRouteImport } from './routes/posts/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as ProfileMyPostIndexImport } from './routes/profile/my-post/index'
import { Route as ProfileInfoIndexImport } from './routes/profile/info/index'
import { Route as PostsCreateIndexImport } from './routes/posts/create/index'
import { Route as PostsPostIdIndexImport } from './routes/posts/$postId/index'
import { Route as AuthSigninIndexImport } from './routes/auth/signin/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AuthLogoutIndexImport } from './routes/auth/logout/index'
import { Route as PostsEditPostIdIndexImport } from './routes/posts/edit.$postId/index'

// Create/Update Routes

const ProfileRouteRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PostsRouteRoute = PostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)

const ProfileMyPostIndexRoute = ProfileMyPostIndexImport.update({
  id: '/my-post/',
  path: '/my-post/',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const ProfileInfoIndexRoute = ProfileInfoIndexImport.update({
  id: '/info/',
  path: '/info/',
  getParentRoute: () => ProfileRouteRoute,
} as any)

const PostsCreateIndexRoute = PostsCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => PostsRouteRoute,
} as any)

const PostsPostIdIndexRoute = PostsPostIdIndexImport.update({
  id: '/$postId/',
  path: '/$postId/',
  getParentRoute: () => PostsRouteRoute,
} as any)

const AuthSigninIndexRoute = AuthSigninIndexImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLogoutIndexRoute = AuthLogoutIndexImport.update({
  id: '/logout/',
  path: '/logout/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const PostsEditPostIdIndexRoute = PostsEditPostIdIndexImport.update({
  id: '/edit/$postId/',
  path: '/edit/$postId/',
  getParentRoute: () => PostsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof PostsRouteImport
    }
    '/auth/logout/': {
      id: '/auth/logout/'
      path: '/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/signin/': {
      id: '/auth/signin/'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/posts/$postId/': {
      id: '/posts/$postId/'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdIndexImport
      parentRoute: typeof PostsRouteImport
    }
    '/posts/create/': {
      id: '/posts/create/'
      path: '/create'
      fullPath: '/posts/create'
      preLoaderRoute: typeof PostsCreateIndexImport
      parentRoute: typeof PostsRouteImport
    }
    '/profile/info/': {
      id: '/profile/info/'
      path: '/info'
      fullPath: '/profile/info'
      preLoaderRoute: typeof ProfileInfoIndexImport
      parentRoute: typeof ProfileRouteImport
    }
    '/profile/my-post/': {
      id: '/profile/my-post/'
      path: '/my-post'
      fullPath: '/profile/my-post'
      preLoaderRoute: typeof ProfileMyPostIndexImport
      parentRoute: typeof ProfileRouteImport
    }
    '/posts/edit/$postId/': {
      id: '/posts/edit/$postId/'
      path: '/edit/$postId'
      fullPath: '/posts/edit/$postId'
      preLoaderRoute: typeof PostsEditPostIdIndexImport
      parentRoute: typeof PostsRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthLogoutIndexRoute: typeof AuthLogoutIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthSigninIndexRoute: typeof AuthSigninIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLogoutIndexRoute: AuthLogoutIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthSigninIndexRoute: AuthSigninIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface PostsRouteRouteChildren {
  PostsIndexRoute: typeof PostsIndexRoute
  PostsPostIdIndexRoute: typeof PostsPostIdIndexRoute
  PostsCreateIndexRoute: typeof PostsCreateIndexRoute
  PostsEditPostIdIndexRoute: typeof PostsEditPostIdIndexRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsIndexRoute: PostsIndexRoute,
  PostsPostIdIndexRoute: PostsPostIdIndexRoute,
  PostsCreateIndexRoute: PostsCreateIndexRoute,
  PostsEditPostIdIndexRoute: PostsEditPostIdIndexRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

interface ProfileRouteRouteChildren {
  ProfileInfoIndexRoute: typeof ProfileInfoIndexRoute
  ProfileMyPostIndexRoute: typeof ProfileMyPostIndexRoute
}

const ProfileRouteRouteChildren: ProfileRouteRouteChildren = {
  ProfileInfoIndexRoute: ProfileInfoIndexRoute,
  ProfileMyPostIndexRoute: ProfileMyPostIndexRoute,
}

const ProfileRouteRouteWithChildren = ProfileRouteRoute._addFileChildren(
  ProfileRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/profile': typeof ProfileRouteRouteWithChildren
  '/posts/': typeof PostsIndexRoute
  '/auth/logout': typeof AuthLogoutIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/signin': typeof AuthSigninIndexRoute
  '/posts/$postId': typeof PostsPostIdIndexRoute
  '/posts/create': typeof PostsCreateIndexRoute
  '/profile/info': typeof ProfileInfoIndexRoute
  '/profile/my-post': typeof ProfileMyPostIndexRoute
  '/posts/edit/$postId': typeof PostsEditPostIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/profile': typeof ProfileRouteRouteWithChildren
  '/posts': typeof PostsIndexRoute
  '/auth/logout': typeof AuthLogoutIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/signin': typeof AuthSigninIndexRoute
  '/posts/$postId': typeof PostsPostIdIndexRoute
  '/posts/create': typeof PostsCreateIndexRoute
  '/profile/info': typeof ProfileInfoIndexRoute
  '/profile/my-post': typeof ProfileMyPostIndexRoute
  '/posts/edit/$postId': typeof PostsEditPostIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/profile': typeof ProfileRouteRouteWithChildren
  '/posts/': typeof PostsIndexRoute
  '/auth/logout/': typeof AuthLogoutIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/auth/signin/': typeof AuthSigninIndexRoute
  '/posts/$postId/': typeof PostsPostIdIndexRoute
  '/posts/create/': typeof PostsCreateIndexRoute
  '/profile/info/': typeof ProfileInfoIndexRoute
  '/profile/my-post/': typeof ProfileMyPostIndexRoute
  '/posts/edit/$postId/': typeof PostsEditPostIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/posts'
    | '/profile'
    | '/posts/'
    | '/auth/logout'
    | '/auth/register'
    | '/auth/signin'
    | '/posts/$postId'
    | '/posts/create'
    | '/profile/info'
    | '/profile/my-post'
    | '/posts/edit/$postId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/profile'
    | '/posts'
    | '/auth/logout'
    | '/auth/register'
    | '/auth/signin'
    | '/posts/$postId'
    | '/posts/create'
    | '/profile/info'
    | '/profile/my-post'
    | '/posts/edit/$postId'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/posts'
    | '/profile'
    | '/posts/'
    | '/auth/logout/'
    | '/auth/register/'
    | '/auth/signin/'
    | '/posts/$postId/'
    | '/posts/create/'
    | '/profile/info/'
    | '/profile/my-post/'
    | '/posts/edit/$postId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  ProfileRouteRoute: typeof ProfileRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  PostsRouteRoute: PostsRouteRouteWithChildren,
  ProfileRouteRoute: ProfileRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/posts",
        "/profile"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/logout/",
        "/auth/register/",
        "/auth/signin/"
      ]
    },
    "/posts": {
      "filePath": "posts/route.tsx",
      "children": [
        "/posts/",
        "/posts/$postId/",
        "/posts/create/",
        "/posts/edit/$postId/"
      ]
    },
    "/profile": {
      "filePath": "profile/route.tsx",
      "children": [
        "/profile/info/",
        "/profile/my-post/"
      ]
    },
    "/posts/": {
      "filePath": "posts/index.tsx",
      "parent": "/posts"
    },
    "/auth/logout/": {
      "filePath": "auth/logout/index.tsx",
      "parent": "/auth"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.tsx",
      "parent": "/auth"
    },
    "/auth/signin/": {
      "filePath": "auth/signin/index.tsx",
      "parent": "/auth"
    },
    "/posts/$postId/": {
      "filePath": "posts/$postId/index.tsx",
      "parent": "/posts"
    },
    "/posts/create/": {
      "filePath": "posts/create/index.tsx",
      "parent": "/posts"
    },
    "/profile/info/": {
      "filePath": "profile/info/index.tsx",
      "parent": "/profile"
    },
    "/profile/my-post/": {
      "filePath": "profile/my-post/index.tsx",
      "parent": "/profile"
    },
    "/posts/edit/$postId/": {
      "filePath": "posts/edit.$postId/index.tsx",
      "parent": "/posts"
    }
  }
}
ROUTE_MANIFEST_END */
